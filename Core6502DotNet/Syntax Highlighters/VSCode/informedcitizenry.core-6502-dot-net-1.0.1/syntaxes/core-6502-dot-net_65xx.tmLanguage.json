{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Core 6502.Net (65xx)",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#characters"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#registers"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.pseudoop.core6502_net_65xx",
          "match": "(?i)(^|\\s)(\\.(addr|align|binary|bstring|byte|char|cbmflt|cbmfltp|cstring|dint|dword|fill|hstring|lint|long|lstring|nstring|pstring|rta|sbyte|short|sint|string|word))\\b"
        },
        {
          "name": "keyword.control.directive.core6502_net_65xx",
          "match": "(?i)(^|\\s)(\\.(assert|auto|bank|binclude|block|break|case|continue|comment|cpu|default|dp|dsection|echo|elseifndef|elseifdef|else|elseif|encoding|end|endblock|endfunction|endif|endmacro|endpage|endrepeat|endrelocate|endswitch|endwhile|eor|equ|error|errorif|for|foreach|format|function|global|goto|if|ifdef|ifndef|include|initmem|invoke|let|m8|m16|macro|manual|map|mx8|mx16|next|org|page|proff|pron|pseudopc|realpc|relocate|repeat|return|section|switch|target|unmap|warn|warnif|while|x8|x16))\\b"
        },
        {
          "name": "keyword.other.mnemonic.core6502_net_65xx",
          "match": "(?i)\\b(adc|anc|and|ane|arr|asl|asr|asw|bbr|bbs|bcc|bcs|beq|bge|bit|blt|bmi|bne|bpl|bra|brk|brl|bsr|bvc|bvs|cla|clc|cld|cle|cli|clv|clx|cly|cmp|cop|cpx|cpy|cpz|csh|dcp|dec|dew|dex|dey|dez|dop|eor|inc|inw|inx|iny|inz|isb|jam|jcc|jcs|jeq|jmi|jml|jmp|jne|jpl|jsl|jsr|jvc|jvs|las|lax|lda|ldx|ldy|ldz|lsr|map|mvn|mvp|neg|nop|ora|pea|pei|per|pha|phb|phd|phk|php|phw|phx|phy|phz|pla|plb|pld|plp|plx|ply|plz|rep|rla|rmb|rol|ror|row|rra|rti|rtl|rtn|rts|s|sax|say|sbc|sec|sed|see|sei|sep|set|sha|shx|shy|slo|smb|sp|sre|st1|st2|sta|stp|stx|sty|stz|tai|tam|tas|tax|tay|taz|tcd|tcs|tdc|tdd|tia|tii|tin|tma|top|trb|tsb|tsc|tst|tsx|tsy|txa|txs|txy|tya|tys|tyx|tza|wai|wdm|xba|xce)\\b"
        },
        {
          "name": "keyword.other.macro.core6502_net_65xx",
          "match": "(^|\\s)\\.[a-zA-Z]\\w*\\b"
        },
        {
          "name": "keyword.function.core6502_net_65xx",
          "match": "(?i)\\b(abs|acos|atan|byte|cmbflt|cbmfltp|cbrt|ceil|cos|cosh|deg|dword|exp|float|floor|format|frac|hypot|len|ln|log|log10|long|peek|poke|pow|rad|random|round|section|sgn|sin|sinh|sqrt|tan|tanh|word)\\b"
        },
        {
          "name": "keyword.define.core6502_net_65xx",
          "match": "(?i)\\b(CURRENT_PASS|false|MATH_E|MATH_PI|INT8_MAX|INT8_MIN|INT16_MAX|INT16_MIN|INT24_MAX|INT24_MIN|INT32_MAX|INT32_MIN|true|UINT8_MAX|UINT8_MIN|UINT16_MAX|UINT16_MIN|UINT24_MAX|UINT24_MIN|UINT32_MAX|UINT32_MIN)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.core6502_net_65xx",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.core6502_net_65xx",
          "match": "\\\\."
        }
      ]
    },
    "characters": {
      "name": "string.quoted.single.core6502_net_65xx",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "name": "constant.character.escape.core6502_net_65xx",
          "match": "\\\\(['\"\\\\0abfnrtv]|x[0-9a-fA-F]{1,4}|u[0-9a-fA-F]{4})"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.block.core6502_net_65xx",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "name": "comment.line.core6502_net_65xx",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.line.core6502_net_65xx",
          "begin": ";",
          "end": "$"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.numeric.binary.core6502_net_65xx",
          "match": "(?i)(((^|[^)a-zA-Z0-9_])\\%)|0b)[0-1_]+\\b"
        },
        {
          "name": "constant.numeric.altbinary.core6502_net_65xx",
          "match": "(?i)(\\%|0b)[.#_]+\\b"
        },
        {
          "name": "constant.numeric.hexadecimal.core6502_net_65xx",
          "match": "(?i)(\\$|0x)[0-9a-f_]+\\b"
        },
        {
          "name": "constant.numeric.octal.core6502_net_65xx",
          "match": "(?i)\\b(0[0-7_]+)|((0o)[0-7_]+)\\b"
        },
        {
          "name": "constant.numeric.scientific.core6502_net_65xx",
          "match": "(?i)\\b[0-9_]+((\\.\\d+)|(?:\\.\\d+)?e[\\-\\+]?[0-9_]+)?\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.core6502_net_65xx",
          "match": "\\#|\\+|\\-|\\=|\\*|\\\/|\\!|\\<|\\>|\\&|\\||\\^|\\(|\\)|\\[|\\]|\\,"
        }
      ]
    },
    "registers": {
      "patterns": [
        {
          "name": "keyword.register.core6502_net_65xx",
          "match": "(?i)\\b(a|s|sp|x|y|z)\\b"
        }
      ]
    }
  },
  "scopeName": "source.core6502_net_65xx"
}